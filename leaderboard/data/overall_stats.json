{
  "results": {
    "advantage-alignment": {
      "paper_metadata": {
        "id": "advantage-alignment",
        "title": "Advantage Alignment Algorithms",
        "arxiv_abs": "https://arxiv.org/abs/2406.14662v3",
        "arxiv_date": "2025-02-06",
        "arxiv_v1_date": "2024-06-20",
        "github_url": "https://github.com/jduquevan/advantage-alignment",
        "first_commit_date": "2025-04-07",
        "last_commit_date": "2025-04-07",
        "venue": "ICLR2025",
        "annotated_file_paths": "train.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "aa_terms3": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms2": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "aa_terms1": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "integrated_aa": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "proximal_surrogate": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 18.181818181818183,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 4.545454545454546,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 4.545454545454546,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 4.545454545454546,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 4.545454545454546,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 0.0,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 18.181818181818183,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 22.727272727272727,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "Diff-Transformer": {
      "paper_metadata": {
        "id": "Diff-Transformer",
        "title": "Differential Transformer",
        "arxiv_abs": "https://arxiv.org/abs/2410.05258v2",
        "arxiv_date": "2025-04-07",
        "arxiv_v1_date": "2024-10-07",
        "github_url": "https://aka.ms/Diff-Transformer",
        "first_commit_date": "2024-10-07",
        "last_commit_date": "2025-03-03",
        "venue": "ICLR2025",
        "annotated_file_paths": "model.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "empirical lambda init function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "re-parameterize lambda": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "taking difference": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GroupNorm with scaling": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lambda setup": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Normalization setup": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "multihead differential attention": [
              {
                "snippet_code_line_count": 38,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 22.22222222222222,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 12.962962962962964,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 20.37037037037037,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 9.25925925925926,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 5.555555555555555,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 20.37037037037037,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 25.925925925925927,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 12.962962962962964,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 7.407407407407407,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 20.37037037037037,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "DiffusionDPO": {
      "paper_metadata": {
        "id": "DiffusionDPO",
        "title": "Diffusion Model Alignment Using Direct Preference Optimization",
        "arxiv_abs": "https://arxiv.org/abs/2311.12908v1",
        "arxiv_date": "2023-11-22",
        "arxiv_v1_date": "2023-11-22",
        "github_url": "https://github.com/SalesforceAIResearch/DiffusionDPO",
        "first_commit_date": "2023-12-24",
        "last_commit_date": "2025-02-03",
        "venue": "CVPR2024",
        "annotated_file_paths": "loss.py",
        "context_file_paths": "train.py"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "loss computation": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sft loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss computation": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate model losses": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw model loss metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate reference losses": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "raw ref loss": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dpo loss formula": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "implicit accuracy metric": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 71.1864406779661,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 98.30508474576271,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 47.45762711864407,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 71.1864406779661,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 13.559322033898304,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 35.59322033898305,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 62.71186440677966,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 72.88135593220339,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 94.91525423728814,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 6.779661016949152,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 33.898305084745765,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 18.64406779661017,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 1.694915254237288,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 32.20338983050848,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 72.88135593220339,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 1.694915254237288,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 13.559322033898304,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 33.898305084745765,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 93.22033898305085,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 100.0,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 35.59322033898305,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 28.8135593220339,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 72.88135593220339,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 98.30508474576271,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 28.8135593220339,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 22.033898305084747,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 33.898305084745765,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 61.016949152542374,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 16.949152542372882,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 20.338983050847457,
          "std": 0.0
        }
      }
    },
    "DyT": {
      "paper_metadata": {
        "id": "DyT",
        "title": "Transformers without Normalization",
        "arxiv_abs": "https://www.arxiv.org/abs/2503.10622v1",
        "arxiv_date": "2025-03-13",
        "arxiv_v1_date": "2025-03-13",
        "github_url": "https://github.com/jiachenzhu/DyT",
        "first_commit_date": "2025-03-09",
        "last_commit_date": "2025-03-30",
        "venue": "CVPR2025",
        "annotated_file_paths": "dynamic_tanh.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "init": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "tanh": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channel split": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "channels last": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "channels first": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 100.0,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 100.0,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 94.44444444444444,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 66.66666666666667,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 38.888888888888886,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 72.22222222222223,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 72.22222222222223,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 50.0,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 33.333333333333336,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 100.0,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 33.333333333333336,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 27.77777777777778,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 94.44444444444444,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 94.44444444444444,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 38.888888888888886,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 16.666666666666668,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 50.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 72.22222222222223,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 16.666666666666668,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 33.333333333333336,
          "std": 0.0
        }
      }
    },
    "eomt": {
      "paper_metadata": {
        "id": "eomt",
        "title": "Your ViT is Secretly an Image Segmentation Model",
        "arxiv_abs": "https://arxiv.org/abs/2503.19108v1",
        "arxiv_date": "2025-03-24",
        "arxiv_v1_date": "2025-03-24",
        "github_url": "https://github.com/tue-mps/eomt/",
        "first_commit_date": "2025-03-16",
        "last_commit_date": "2025-04-18",
        "venue": "CVPR2025",
        "annotated_file_paths": "eomt.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "scale block initialization": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convolution 1": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convolution 2": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale block forward": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "eomt initialization": [
              {
                "snippet_code_line_count": 20,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "store parameters": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "register attention mask probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize query embedding": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize class prediction head": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize mask prediction head": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate upscale parameters": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize upscale module": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "predict from features": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query tokens": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate class logits": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "process image features": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate mask logits": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "disable attention mask": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random mask disable": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "custom attention mechanism": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "extract query key value": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process attention mask": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "project attention output": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "forward pass": [
              {
                "snippet_code_line_count": 58,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "input normalization": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "patch embedding": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize tracking variables": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "process transformer blocks": [
              {
                "snippet_code_line_count": 44,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "add query tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate masks": [
              {
                "snippet_code_line_count": 35,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "predict masks and classes": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create attention mask": [
              {
                "snippet_code_line_count": 22,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply masking probability": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "transformer block forward": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "final prediction": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 19.135802469135804,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 21.296296296296298,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 19.753086419753085,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 8.641975308641975,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 8.641975308641975,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 21.604938271604937,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 31.17283950617284,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 32.407407407407405,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 12.962962962962964,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 2.7777777777777777,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 15.123456790123457,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 13.88888888888889,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 3.0864197530864197,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 6.481481481481482,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 18.82716049382716,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 12.037037037037036,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 1.8518518518518519,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 9.25925925925926,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 18.209876543209877,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 27.77777777777778,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 21.91358024691358,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 3.0864197530864197,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 9.567901234567902,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 3.0864197530864197,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 13.271604938271604,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 5.555555555555555,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 2.7777777777777777,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 8.950617283950617,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 20.679012345679013,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 2.7777777777777777,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 8.024691358024691,
          "std": 0.0
        }
      }
    },
    "fractalgen": {
      "paper_metadata": {
        "id": "fractalgen",
        "title": "Fractal Generative Models",
        "arxiv_abs": "https://arxiv.org/abs/2502.17437v2",
        "arxiv_date": "2025-02-25",
        "arxiv_v1_date": "2025-02-24",
        "github_url": "https://github.com/LTH14/fractalgen",
        "first_commit_date": "2025-02-23",
        "last_commit_date": "2025-02-25",
        "venue": "arXiv2025",
        "annotated_file_paths": "models/mar.py",
        "context_file_paths": [
          "models/pixelloss.py",
          "util/visualize.py"
        ]
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "patchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "unpatchify": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample orders": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking uniform": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "random masking": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "init token mask, patches, orders, num_iter": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sample image": [
              {
                "snippet_code_line_count": 33,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "concatenate patches": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask ratio and mask length": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mask by order": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "cfg schedule": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "next level sample function": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "chunk mask to pred": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 80.28169014084507,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 26.760563380281692,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 28.169014084507044,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 9.859154929577464,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 15.492957746478874,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 18.309859154929576,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 64.78873239436619,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 81.69014084507042,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 4.225352112676056,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 18.309859154929576,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 76.05633802816901,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 29.577464788732396,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 7.042253521126761,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 11.267605633802816,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 33.80281690140845,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 52.11267605633803,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 5.633802816901408,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 21.12676056338028,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 67.6056338028169,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 33.80281690140845,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 28.169014084507044,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 26.760563380281692,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 18.309859154929576,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 28.169014084507044,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 2.816901408450704,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 2.816901408450704,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 5.633802816901408,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 21.12676056338028,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 32.394366197183096,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 5.633802816901408,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 8.450704225352112,
          "std": 0.0
        }
      }
    },
    "GMFlow": {
      "paper_metadata": {
        "id": "GMFlow",
        "title": "Gaussian Mixture Flow Matching Models",
        "arxiv_abs": "https://arxiv.org/abs/2504.05304v1",
        "arxiv_date": "2025-04-07",
        "arxiv_v1_date": "2025-04-07",
        "github_url": "https://github.com/Lakonik/GMFlow",
        "first_commit_date": "2025-04-07",
        "last_commit_date": "2025-04-24",
        "venue": "arXiv2025",
        "annotated_file_paths": [
          "gm_kl_loss.py",
          "lib/models/diffusions/gmflow.py"
        ],
        "context_file_paths": [
          "lib/ops/gmflow_ops/gmflow_ops.py"
        ]
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "gm kl loss": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute inverse stds": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute weighted difference": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gaussian log likelihood": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute final nll": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare timestep tensor": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute noise scale": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert model output to x0": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute timestep coefficients": [
              {
                "snippet_code_line_count": 15,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gaussian mask": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply mask to gm": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "set timesteps": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main sampling loop": [
              {
                "snippet_code_line_count": 72,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply probabilistic cfg": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply 2nd order gm": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "perform gm sde/ode step": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 3.658536585365854,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 15.24390243902439,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 3.048780487804878,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 12.804878048780488,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 1.829268292682927,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 9.146341463414634,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 24.390243902439025,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 43.292682926829265,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 14.024390243902438,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 2.4390243902439024,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 28.658536585365855,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 3.048780487804878,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.6097560975609756,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 12.195121951219512,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 4.2682926829268295,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 1.2195121951219512,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.6097560975609756,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 14.024390243902438,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 4.2682926829268295,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 29.26829268292683,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 18.29268292682927,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 1.829268292682927,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 3.048780487804878,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 2.4390243902439024,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 12.804878048780488,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.6097560975609756,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 2.4390243902439024,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 43.90243902439025,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 1.829268292682927,
          "std": 0.0
        }
      }
    },
    "GPS": {
      "paper_metadata": {
        "id": "GPS",
        "title": "GPS: A Probabilistic Distributional Similarity with Gumbel Priors for Set-to-Set Matching",
        "arxiv_abs": "https://openreview.net/forum?id=U0SijGsCHJ",
        "arxiv_date": "2025-01-22",
        "arxiv_v1_date": "2025-01-22",
        "github_url": "https://github.com/Zhang-VISLab/ICLR2025-GPS",
        "first_commit_date": "2025-02-28",
        "last_commit_date": "2025-02-28",
        "venue": "ICLR2025",
        "annotated_file_paths": "model.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "chamfer distance": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "distance between two sets": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "GPS reparameterization with minimum euclidean distance": [
              {
                "snippet_code_line_count": 18,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "pairwise expansion": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "euclidean distance computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Gumbel distribution similarity transformation": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 0.0,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 0.0,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 0.0,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 9.30232558139535,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "grid-cell-conformal-isometry": {
      "paper_metadata": {
        "id": "grid-cell-conformal-isometry",
        "title": "On Conformal Isometry of Grid Cells: Learning Distance-Preserving Position Embedding",
        "arxiv_abs": "https://arxiv.org/abs/2405.16865v4",
        "arxiv_date": "2025-02-27",
        "arxiv_v1_date": "2024-05-27",
        "github_url": "https://github.com/DehongXu/grid-cell-conformal-isometry",
        "first_commit_date": "2025-02-18",
        "last_commit_date": "2025-02-28",
        "venue": "ICLR2025",
        "annotated_file_paths": "model.py",
        "context_file_paths": "sim_data.py"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "transformation loss": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute transformation error": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "activity metrics": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "conformal isometry loss": [
              {
                "snippet_code_line_count": 17,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare displacement": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute neural representations": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "calculate distance preservation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "linear transformation": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute transformation matrix": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "nonlinear transformation 1": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prepare inputs": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply nonlinear transform": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply additive transformation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "_dx_to_theta_id_dr": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 17.073170731707318,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 19.51219512195122,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 25.609756097560975,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 13.414634146341463,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 10.975609756097562,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 3.658536585365854,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 50.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 50.0,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 19.51219512195122,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 3.658536585365854,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 40.24390243902439,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 10.975609756097562,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 6.097560975609756,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 6.097560975609756,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 10.975609756097562,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 3.658536585365854,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 23.170731707317074,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 28.048780487804876,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 17.073170731707318,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 6.097560975609756,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 8.536585365853659,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 6.097560975609756,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 21.951219512195124,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 4.878048780487805,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 2.4390243902439024,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 21.951219512195124,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 31.70731707317073,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "hyla": {
      "paper_metadata": {
        "id": "hyla",
        "title": "Attention as a Hypernetwork",
        "arxiv_abs": "https://arxiv.org/abs/2406.05816v4",
        "arxiv_date": "2024-02-17",
        "arxiv_v1_date": "2024-06-09",
        "github_url": "https://github.com/smonsays/hypernetwork-attention",
        "first_commit_date": "2024-06-09",
        "last_commit_date": "2024-06-22",
        "venue": "ICLR2025",
        "annotated_file_paths": "attention.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "rms_head": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mlp_relu": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mlp_linear": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 100.0,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 55.55555555555556,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 100.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 66.66666666666667,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 22.22222222222222,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 44.44444444444444,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 77.77777777777777,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 77.77777777777777,
          "std": 0.0
        }
      }
    },
    "LEN": {
      "paper_metadata": {
        "id": "LEN",
        "title": "Second-Order Min-Max Optimization with Lazy Hessians",
        "arxiv_abs": "https://arxiv.org/abs/2410.09568v2",
        "arxiv_date": "2025-04-15",
        "arxiv_v1_date": "2024-10-12",
        "github_url": "https://github.com/TrueNobility303/LEN",
        "first_commit_date": "2024-12-01",
        "last_commit_date": "2025-01-09",
        "venue": "ICLR2025",
        "annotated_file_paths": "Synthetic.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "gradient descent ascent field": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input vector": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute gradients": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "combine gradients": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "jacobian computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "split input and compute norm": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "construct jacobian matrix": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "lazy extra newton": [
              {
                "snippet_code_line_count": 34,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize variables": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "main iteration loop": [
              {
                "snippet_code_line_count": 25,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute schur decomposition": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gamma update function": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update steps": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "track metrics": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 18.42105263157895,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 25.43859649122807,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 14.035087719298245,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 4.385964912280702,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 8.771929824561404,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 33.333333333333336,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 35.96491228070175,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 33.333333333333336,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 17.54385964912281,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 1.7543859649122806,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 25.43859649122807,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 18.42105263157895,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 8.771929824561404,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 10.526315789473685,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 14.035087719298245,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 10.526315789473685,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 7.894736842105263,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 21.05263157894737,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 35.96491228070175,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 32.45614035087719,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 14.035087719298245,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 14.912280701754385,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 14.912280701754385,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 15.789473684210526,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 17.54385964912281,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 4.385964912280702,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 13.157894736842104,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 35.08771929824562,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 4.385964912280702,
          "std": 0.0
        }
      }
    },
    "llm-sci-use": {
      "paper_metadata": {
        "id": "llm-sci-use",
        "title": "Mapping the increasing use of LLMs in scientific papers",
        "arxiv_abs": "https://arxiv.org/abs/2404.01268v1",
        "arxiv_date": "2024-04-01",
        "arxiv_v1_date": "2024-04-01",
        "github_url": "https://github.com/Weixin-Liang/Mapping-the-Increasing-Use-of-LLMs-in-Scientific-Papers",
        "first_commit_date": "2024-05-12",
        "last_commit_date": "2025-03-20",
        "venue": "COLM2024",
        "annotated_file_paths": "src/MLE.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "loading_token_probabilities": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "log_likelihood_optimization": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "mixture_log_likelihood_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "token_distribution_computation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "human_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ai_text_probabilities": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_inference": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "precompute_probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bootstrap_sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "alpha_optimization": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "confidence_interval_calculation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "inference_pipeline": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_loading": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "data_preprocessing": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "alpha_estimation": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 46.26865671641791,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 67.16417910447761,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 70.14925373134328,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 64.17910447761194,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 59.701492537313435,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 71.64179104477611,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 71.64179104477611,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 71.64179104477611,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 71.64179104477611,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 62.6865671641791,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 67.16417910447761,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 70.14925373134328,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 58.208955223880594,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 62.6865671641791,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 67.16417910447761,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 19.402985074626866,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 34.32835820895522,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 62.6865671641791,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 62.6865671641791,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 61.19402985074627,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 68.65671641791045,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 26.865671641791046,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 55.223880597014926,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 65.67164179104478,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 70.14925373134328,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 52.23880597014925,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 62.6865671641791,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 64.17910447761194,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 67.16417910447761,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 23.880597014925375,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 61.19402985074627,
          "std": 0.0
        }
      }
    },
    "minp": {
      "paper_metadata": {
        "id": "minp",
        "title": "Min-p Sampling for Creative and Coherent LLM Outputs",
        "arxiv_abs": "https://arxiv.org/abs/2407.01082v4",
        "arxiv_date": "2025-03-20",
        "arxiv_v1_date": "2024-07-01",
        "github_url": "https://github.com/menhguin/minp_paper",
        "first_commit_date": "2025-03-15",
        "venue": "ICLR2025",
        "annotated_file_paths": "implementation.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "min-p sampling": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "convert logits to probabilities": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "find maximum probability token": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "scale min_p threshold": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "identify tokens to remove": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "ensure minimum tokens are kept": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "apply filter to scores": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 100.0,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 100.0,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 100.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 100.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 100.0,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 22.22222222222222,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 100.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 100.0,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 88.88888888888889,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 5.555555555555555,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 100.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 100.0,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 55.55555555555556,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 66.66666666666667,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 100.0,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 100.0,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 100.0,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 83.33333333333333,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 94.44444444444444,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 100.0,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 5.555555555555555,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 100.0,
          "std": 0.0
        }
      }
    },
    "OptimalSteps": {
      "paper_metadata": {
        "id": "OptimalSteps",
        "title": "Optimal Stepsize for Diffusion Sampling",
        "arxiv_abs": "https://arxiv.org/abs/2503.21774v1",
        "arxiv_date": "2025-03-27",
        "arxiv_v1_date": "2025-03-27",
        "github_url": "https://github.com/bebebe666/OptimalSteps",
        "first_commit_date": "2025-03-27",
        "last_commit_date": "2025-04-12",
        "venue": "arXiv2025",
        "annotated_file_paths": "OSS.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "search OSS function": [
              {
                "snippet_code_line_count": 40,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Teacher Trajectory Computation": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Teacher Trajectory Computation for each timestep": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming for Each Sample": [
              {
                "snippet_code_line_count": 32,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Initialization for Each Sample": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Search": [
              {
                "snippet_code_line_count": 16,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 1": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 2": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming 3": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Dynamic Programming 4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Dynamic Programming Traceback": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 15.2,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 14.4,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 8.8,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 15.2,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 12.0,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 14.4,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 12.0,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 5.6,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 3.2,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 20.0,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 15.2,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 2.4,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 6.4,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 23.2,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 5.6,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 14.4,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 20.0,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 17.6,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 2.4,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 6.4,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 6.4,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 14.4,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 6.4,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 11.2,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 17.6,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "REPA-E": {
      "paper_metadata": {
        "id": "REPA-E",
        "title": "REPA-E: Unlocking VAE for End-to-End Tuning with Latent Diffusion Transformers",
        "arxiv_abs": "https://arxiv.org/abs/2504.10483v1",
        "arxiv_date": "2025-04-14",
        "arxiv_v1_date": "2025-04-14",
        "github_url": "https://github.com/End2End-Diffusion/REPA-E",
        "first_commit_date": "2025-04-16",
        "last_commit_date": "2025-04-16",
        "venue": "arXiv2025",
        "annotated_file_paths": [
          "models/sit.py",
          "train_repae.py"
        ],
        "context_file_paths": [
          "loss/losses.py"
        ]
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 124
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "SiTBatchNorm eps is set to 1e-4": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check1": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "vae_loss": [
              {
                "snippet_code_line_count": 13,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "check2": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "sit_loss": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 0.0,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 0.0,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 9.523809523809524,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 28.571428571428573,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 28.571428571428573,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 9.523809523809524,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 19.047619047619047,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 14.285714285714286,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 4.761904761904762,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 19.047619047619047,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 4.761904761904762,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 19.047619047619047,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 19.047619047619047,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 4.761904761904762,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 38.095238095238095,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 9.523809523809524,
          "std": 0.0
        }
      }
    },
    "schedule_free": {
      "paper_metadata": {
        "id": "schedule_free",
        "title": "The Road Less Scheduled",
        "arxiv_abs": "https://arxiv.org/abs/2405.15682v4",
        "arxiv_date": "2024-10-29",
        "arxiv_v1_date": "2024-05-24",
        "github_url": "https://github.com/facebookresearch/schedule_free",
        "first_commit_date": "2024-03-31",
        "last_commit_date": "2025-04-11",
        "venue": "NeurIPS2024",
        "annotated_file_paths": "adamw_schedulefree_reference.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "step": [
              {
                "snippet_code_line_count": 48,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "warmup schedule": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "bias correction": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "learning rate": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting and averaging": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "dynamic weighting": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "weight decay": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "Decay the first and second moment running average coefficient": [
              {
                "snippet_code_line_count": 3,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "moment running average coefficient": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "denom": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "z update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update and interpolation": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "averaging update": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "gradient evaluation interpolation": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 21.62162162162162,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 24.324324324324323,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 32.432432432432435,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 14.864864864864865,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 14.864864864864865,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 25.675675675675677,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 32.432432432432435,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 33.78378378378378,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 18.91891891891892,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 6.756756756756757,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 22.972972972972972,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 21.62162162162162,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 2.7027027027027026,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 12.162162162162161,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 5.405405405405405,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 5.405405405405405,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 16.216216216216218,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 18.91891891891892,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 28.37837837837838,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 17.56756756756757,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 32.432432432432435,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 20.27027027027027,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 16.216216216216218,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 14.864864864864865,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 20.27027027027027,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 8.108108108108109,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 6.756756756756757,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 5.405405405405405,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 28.37837837837838,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 5.405405405405405,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 5.405405405405405,
          "std": 0.0
        }
      }
    },
    "semanticist": {
      "paper_metadata": {
        "id": "semanticist",
        "title": "Principal Components Enable A New Language of Images",
        "arxiv_abs": "https://arxiv.org/abs/2503.08685v1",
        "arxiv_date": "2025-03-11",
        "arxiv_v1_date": "2025-03-11",
        "github_url": "https://github.com/visual-gen/semanticist",
        "first_commit_date": "2025-03-09",
        "last_commit_date": "2025-04-17",
        "venue": "arXiv2025",
        "annotated_file_paths": "generate.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "prefill initial tokens": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode single token": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "decode multiple tokens": [
              {
                "snippet_code_line_count": 8,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate main function": [
              {
                "snippet_code_line_count": 36,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup conditions": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "setup sequence parameters": [
              {
                "snippet_code_line_count": 10,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "apply embedding masks": [
              {
                "snippet_code_line_count": 9,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize sequence": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "prefill sequence": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "generate remaining tokens": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "get cfg scale": [
              {
                "snippet_code_line_count": 6,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 14.285714285714286,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 4.395604395604396,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 14.285714285714286,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 4.395604395604396,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 8.791208791208792,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 17.582417582417584,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 18.681318681318682,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 8.791208791208792,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 4.395604395604396,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 8.791208791208792,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 4.395604395604396,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 0.0,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 1.098901098901099,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 24.175824175824175,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 5.4945054945054945,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 17.582417582417584,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "SISS": {
      "paper_metadata": {
        "id": "SISS",
        "title": "Data Unlearning in Diffusion Models",
        "arxiv_abs": "https://arxiv.org/abs/2503.01034",
        "arxiv_date": "2025-03-02",
        "arxiv_v1_date": "2025-03-02",
        "github_url": "https://github.com/claserken/SISS",
        "first_commit_date": "2025-03-02",
        "last_commit_date": "2025-03-05",
        "venue": "ICLR2025",
        "annotated_file_paths": "losses.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "subtracted importance sampled scores: importance sampling with mixture": [
              {
                "snippet_code_line_count": 29,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "create defensive mixture": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute loss terms": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "importance sampling weights": [
              {
                "snippet_code_line_count": 11,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "double forward passes": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 12.727272727272727,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 20.0,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 12.727272727272727,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 20.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 7.2727272727272725,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 7.2727272727272725,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 20.0,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 7.2727272727272725,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 0.0,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 12.727272727272727,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 12.727272727272727,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 12.727272727272727,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 7.2727272727272725,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        }
      }
    },
    "TabDiff": {
      "paper_metadata": {
        "id": "TabDiff",
        "title": "TabDiff: a Mixed-type Diffusion Model for Tabular Data Generation",
        "arxiv_abs": "https://arxiv.org/abs/2410.20626v3",
        "arxiv_date": "2025-02-16",
        "arxiv_v1_date": "2024-10-27",
        "github_url": "https://github.com/MinkaiXu/TabDiff",
        "first_commit_date": "2025-02-16",
        "last_commit_date": "2025-04-12",
        "venue": "ICLR2025",
        "annotated_file_paths": "model.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "initialize the learnable feature-wise parameter rho for numerical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter rhos are greater than rho_offset": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for numerical features with learnable rho": [
              {
                "snippet_code_line_count": 5,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "initialize the learnable feature-wise parameter k for categorical features": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "make sure learnable parameter ks for categorical features are positive": [
              {
                "snippet_code_line_count": 1,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ],
            "compute total noise for categorical features with learnable k": [
              {
                "snippet_code_line_count": 2,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 54.54545454545455,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 18.181818181818183,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 81.81818181818181,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 18.181818181818183,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 18.181818181818183,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 18.181818181818183,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 54.54545454545455,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 72.72727272727273,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 45.45454545454545,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 9.090909090909092,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 27.272727272727273,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 36.36363636363637,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 9.090909090909092,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 36.36363636363637,
          "std": 0.0
        }
      }
    },
    "Tanh-Init": {
      "paper_metadata": {
        "id": "Tanh-Init",
        "title": "Robust Weight Initialization for Tanh Neural Networks with Fixed Point Analysis",
        "arxiv_abs": "https://arxiv.org/abs/2410.02242v2",
        "arxiv_date": "2025-03-02",
        "arxiv_v1_date": "2024-10-03",
        "github_url": "https://github.com/1HyunwooLee/Tanh-Init",
        "first_commit_date": "2025-02-11",
        "last_commit_date": "2025-04-21",
        "venue": "ICLR2025",
        "annotated_file_paths": "model.py",
        "context_file_paths": "null"
      },
      "results": {
        "GEMINI_2_0_FLASH": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_MINI": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "O3_MINI_HIGH": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "DEEPSEEK_R1": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O1_HIGH": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_MINI": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4_1_NANO": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "O3_HIGH": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_BETA": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GPT_4O_2024_08_06": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GROK_3_MINI_BETA_HIGH": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GROK_2_1212": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "MISTRAL_CODESTRAL_2501": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_QWEN_TURBO": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        },
        "GEMINI_2_0_FLASH_LITE": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": true,
                "exit_code": 0
              }
            ]
          }
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "results": {
            "proposed weight initialization": [
              {
                "snippet_code_line_count": 12,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix": [
              {
                "snippet_code_line_count": 7,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "identity_matrix_else": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ],
            "update": [
              {
                "snippet_code_line_count": 4,
                "completion_idx": 0,
                "passed": false,
                "exit_code": 1
              }
            ]
          }
        }
      },
      "problem_scores": {
        "CLAUDE_3_5_SONNET_2024_10_22": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "CLAUDE_3_7_SONNET_2025_02_19": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "DEEPSEEK_R1": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GEMINI_2_0_FLASH_LITE": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GEMINI_2_5_FLASH_PREVIEW_04_17": {
          "mean": 0.0,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_03_25": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GEMINI_2_5_PRO_PREVIEW_05_06": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GPT_4O_2024_08_06": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GPT_4O_MINI": {
          "mean": 0.0,
          "std": 0.0
        },
        "GPT_4_1": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GPT_4_1_MINI": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GPT_4_1_NANO": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "GROK_2_1212": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_BETA": {
          "mean": 0.0,
          "std": 0.0
        },
        "GROK_3_MINI_BETA_HIGH": {
          "mean": 0.0,
          "std": 0.0
        },
        "LLAMA_3_3_70B_INSTRUCT": {
          "mean": 0.0,
          "std": 0.0
        },
        "MISTRAL_CODESTRAL_2501": {
          "mean": 0.0,
          "std": 0.0
        },
        "O1_HIGH": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "O3_HIGH": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "O3_MINI_HIGH": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_CLAUDE_3_5_HAIKU": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_COHERE_COMMAND_A": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_MAVERICK": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_LLAMA_4_SCOUT": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_MISTRAL_MEDIUM_3": {
          "mean": 0.0,
          "std": 0.0
        },
        "OPENROUTER_O4_MINI_HIGH": {
          "mean": 14.814814814814815,
          "std": 0.0
        },
        "OPENROUTER_QWEN_TURBO": {
          "mean": 0.0,
          "std": 0.0
        },
        "QWEN_2_5_CODER_32B_INSTRUCT": {
          "mean": 14.814814814814815,
          "std": 0.0
        }
      }
    }
  },
  "overall_scores": {
    "GEMINI_2_0_FLASH": {
      "line_rates": {
        "mean": 17.391304347826086,
        "std": 0.0,
        "rates": [
          17.391304347826086
        ]
      },
      "task_rates": {
        "mean": 37.264150943396224,
        "std": 0.0,
        "rates": [
          37.264150943396224
        ]
      },
      "llm_cfg": {
        "model": "gemini-2.0-flash",
        "company": "GOOGLE",
        "input_cost": 0.1,
        "output_cost": 0.4,
        "knowledge_cutoff_date": "2024-06",
        "client_kwargs": {},
        "pretty_name": "Gemini-2.0-Flash",
        "developer": "Google",
        "is_open": false
      }
    },
    "GPT_4O_2024_08_06": {
      "line_rates": {
        "mean": 19.32367149758454,
        "std": 0.0,
        "rates": [
          19.32367149758454
        ]
      },
      "task_rates": {
        "mean": 41.0377358490566,
        "std": 0.0,
        "rates": [
          41.0377358490566
        ]
      },
      "llm_cfg": {
        "model": "gpt-4o-2024-08-06",
        "company": "OPENAI",
        "input_cost": 2.5,
        "output_cost": 10.0,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "GPT-4o",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "GPT_4O_MINI": {
      "line_rates": {
        "mean": 8.143547273982056,
        "std": 0.0,
        "rates": [
          8.143547273982056
        ]
      },
      "task_rates": {
        "mean": 23.11320754716981,
        "std": 0.0,
        "rates": [
          23.11320754716981
        ]
      },
      "llm_cfg": {
        "model": "gpt-4o-mini",
        "company": "OPENAI",
        "input_cost": 0.15,
        "output_cost": 0.6,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "GPT-4o-Mini",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "O3_MINI_HIGH": {
      "line_rates": {
        "mean": 24.292615596963422,
        "std": 0.0,
        "rates": [
          24.292615596963422
        ]
      },
      "task_rates": {
        "mean": 52.358490566037744,
        "std": 0.0,
        "rates": [
          52.358490566037744
        ]
      },
      "llm_cfg": {
        "model": "o3-mini-2025-01-31",
        "company": "OPENAI",
        "input_cost": 1.1,
        "output_cost": 4.4,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {
          "temperature": 1,
          "reasoning": {
            "effort": "high"
          }
        },
        "pretty_name": "O3-Mini (High)",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "DEEPSEEK_R1": {
      "line_rates": {
        "mean": 21.048999309868872,
        "std": 0.0,
        "rates": [
          21.048999309868872
        ]
      },
      "task_rates": {
        "mean": 45.75471698113208,
        "std": 0.0,
        "rates": [
          45.75471698113208
        ]
      },
      "llm_cfg": {
        "model": "deepseek-reasoner",
        "company": "DEEPSEEK",
        "input_cost": 0.14,
        "output_cost": 2.19,
        "knowledge_cutoff_date": "2024-10",
        "client_kwargs": {
          "stream": false
        },
        "pretty_name": "DeepSeek-R1",
        "developer": "DeepSeek",
        "is_open": true
      }
    },
    "O1_HIGH": {
      "line_rates": {
        "mean": 25.81090407177364,
        "std": 0.0,
        "rates": [
          25.81090407177364
        ]
      },
      "task_rates": {
        "mean": 48.113207547169814,
        "std": 0.0,
        "rates": [
          48.113207547169814
        ]
      },
      "llm_cfg": {
        "model": "o1-2024-12-17",
        "company": "OPENAI",
        "input_cost": 15.0,
        "output_cost": 60.0,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {
          "temperature": 1,
          "reasoning": {
            "effort": "high"
          }
        },
        "pretty_name": "O1 (High)",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "GPT_4_1": {
      "line_rates": {
        "mean": 27.536231884057973,
        "std": 0.0,
        "rates": [
          27.536231884057973
        ]
      },
      "task_rates": {
        "mean": 50.0,
        "std": 0.0,
        "rates": [
          50.0
        ]
      },
      "llm_cfg": {
        "model": "gpt-4.1-2025-04-14",
        "company": "OPENAI",
        "input_cost": 2.0,
        "output_cost": 8.0,
        "knowledge_cutoff_date": "2023-12",
        "client_kwargs": {},
        "pretty_name": "GPT-4.1",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "GPT_4_1_MINI": {
      "line_rates": {
        "mean": 17.805383022774325,
        "std": 0.0,
        "rates": [
          17.805383022774325
        ]
      },
      "task_rates": {
        "mean": 42.45283018867924,
        "std": 0.0,
        "rates": [
          42.45283018867924
        ]
      },
      "llm_cfg": {
        "model": "gpt-4.1-mini-2025-04-14",
        "company": "OPENAI",
        "input_cost": 0.4,
        "output_cost": 1.6,
        "knowledge_cutoff_date": "2023-12",
        "client_kwargs": {},
        "pretty_name": "GPT-4.1-Mini",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "GPT_4_1_NANO": {
      "line_rates": {
        "mean": 6.142167011732229,
        "std": 0.0,
        "rates": [
          6.142167011732229
        ]
      },
      "task_rates": {
        "mean": 15.09433962264151,
        "std": 0.0,
        "rates": [
          15.09433962264151
        ]
      },
      "llm_cfg": {
        "model": "gpt-4.1-nano-2025-04-14",
        "company": "OPENAI",
        "input_cost": 0.1,
        "output_cost": 0.4,
        "knowledge_cutoff_date": "2023-12",
        "client_kwargs": {},
        "pretty_name": "GPT-4.1-Nano",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "O3_HIGH": {
      "line_rates": {
        "mean": 32.16011042097999,
        "std": 0.0,
        "rates": [
          32.16011042097999
        ]
      },
      "task_rates": {
        "mean": 59.43396226415094,
        "std": 0.0,
        "rates": [
          59.43396226415094
        ]
      },
      "llm_cfg": {
        "model": "o3-2025-04-16",
        "company": "OPENAI",
        "input_cost": 10.0,
        "output_cost": 40.0,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {
          "temperature": 1,
          "reasoning": {
            "effort": "high"
          }
        },
        "pretty_name": "O3 (High)",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "CLAUDE_3_5_SONNET_2024_10_22": {
      "line_rates": {
        "mean": 24.22360248447205,
        "std": 0.0,
        "rates": [
          24.22360248447205
        ]
      },
      "task_rates": {
        "mean": 48.58490566037736,
        "std": 0.0,
        "rates": [
          48.58490566037736
        ]
      },
      "llm_cfg": {
        "model": "claude-3-5-sonnet-20241022",
        "company": "ANTHROPIC",
        "input_cost": 3.0,
        "output_cost": 15.0,
        "knowledge_cutoff_date": "2024-04",
        "client_kwargs": {
          "max_completion_tokens": 8192
        },
        "pretty_name": "Claude-3.5-Sonnet",
        "developer": "Anthropic",
        "is_open": false
      }
    },
    "CLAUDE_3_7_SONNET_2025_02_19": {
      "line_rates": {
        "mean": 26.224982746721874,
        "std": 0.0,
        "rates": [
          26.224982746721874
        ]
      },
      "task_rates": {
        "mean": 51.886792452830186,
        "std": 0.0,
        "rates": [
          51.886792452830186
        ]
      },
      "llm_cfg": {
        "model": "claude-3-7-sonnet-20250219",
        "company": "ANTHROPIC",
        "input_cost": 3.0,
        "output_cost": 15.0,
        "knowledge_cutoff_date": "2024-11",
        "client_kwargs": {
          "max_completion_tokens": 8192
        },
        "pretty_name": "Claude-3.7-Sonnet",
        "developer": "Anthropic",
        "is_open": false
      }
    },
    "GROK_3_BETA": {
      "line_rates": {
        "mean": 20.56590752242926,
        "std": 0.0,
        "rates": [
          20.56590752242926
        ]
      },
      "task_rates": {
        "mean": 42.924528301886795,
        "std": 0.0,
        "rates": [
          42.924528301886795
        ]
      },
      "llm_cfg": {
        "model": "grok-3-beta",
        "company": "XAI",
        "input_cost": 3.0,
        "output_cost": 15.0,
        "knowledge_cutoff_date": "2024-11-17",
        "client_kwargs": {},
        "pretty_name": "Grok-3-Beta",
        "developer": "xAI",
        "is_open": false
      }
    },
    "GEMINI_2_5_PRO_PREVIEW_03_25": {
      "line_rates": {
        "mean": 33.54037267080746,
        "std": 0.0,
        "rates": [
          33.54037267080746
        ]
      },
      "task_rates": {
        "mean": 58.9622641509434,
        "std": 0.0,
        "rates": [
          58.9622641509434
        ]
      },
      "llm_cfg": {
        "model": "gemini-2.5-pro-preview-03-25",
        "company": "GOOGLE",
        "input_cost": 1.25,
        "output_cost": 10.0,
        "knowledge_cutoff_date": "2025-01",
        "client_kwargs": {},
        "pretty_name": "Gemini-2.5-Pro-Preview-03-25",
        "developer": "Google",
        "is_open": false
      }
    },
    "OPENROUTER_DEEPSEEK_CHAT_V3_0324": {
      "line_rates": {
        "mean": 20.70393374741201,
        "std": 0.0,
        "rates": [
          20.70393374741201
        ]
      },
      "task_rates": {
        "mean": 42.45283018867924,
        "std": 0.0,
        "rates": [
          42.45283018867924
        ]
      },
      "llm_cfg": {
        "model": "deepseek/deepseek-chat-v3-0324",
        "company": "OPENROUTER",
        "input_cost": 0.38,
        "output_cost": 0.89,
        "knowledge_cutoff_date": "2024-7",
        "client_kwargs": {},
        "pretty_name": "DeepSeek-Chat-V3-0324",
        "developer": "DeepSeek",
        "is_open": true
      }
    },
    "QWEN_2_5_CODER_32B_INSTRUCT": {
      "line_rates": {
        "mean": 9.523809523809524,
        "std": 0.0,
        "rates": [
          9.523809523809524
        ]
      },
      "task_rates": {
        "mean": 25.943396226415093,
        "std": 0.0,
        "rates": [
          25.943396226415093
        ]
      },
      "llm_cfg": {
        "model": "qwen/qwen-2.5-coder-32b-instruct",
        "company": "OPENROUTER",
        "input_cost": 0.06,
        "output_cost": 0.15,
        "knowledge_cutoff_date": "2024-6",
        "client_kwargs": {},
        "pretty_name": "Qwen-2.5-Coder-32B",
        "developer": "Qwen",
        "is_open": true
      }
    },
    "LLAMA_3_3_70B_INSTRUCT": {
      "line_rates": {
        "mean": 5.314009661835748,
        "std": 0.0,
        "rates": [
          5.314009661835748
        ]
      },
      "task_rates": {
        "mean": 12.264150943396226,
        "std": 0.0,
        "rates": [
          12.264150943396226
        ]
      },
      "llm_cfg": {
        "model": "meta-llama/llama-3.3-70b-instruct",
        "company": "OPENROUTER",
        "input_cost": 0.1,
        "output_cost": 0.25,
        "knowledge_cutoff_date": "2023-12",
        "client_kwargs": {},
        "pretty_name": "Llama-3.3-70B",
        "developer": "Meta",
        "is_open": true
      }
    },
    "OPENROUTER_O4_MINI_HIGH": {
      "line_rates": {
        "mean": 30.77984817115252,
        "std": 0.0,
        "rates": [
          30.77984817115252
        ]
      },
      "task_rates": {
        "mean": 58.490566037735846,
        "std": 0.0,
        "rates": [
          58.490566037735846
        ]
      },
      "llm_cfg": {
        "model": "openai/o4-mini-high",
        "company": "OPENROUTER",
        "input_cost": 1.1,
        "output_cost": 4.4,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "O4-Mini (High)",
        "developer": "OpenAI",
        "is_open": false
      }
    },
    "GROK_3_MINI_BETA_HIGH": {
      "line_rates": {
        "mean": 10.07591442374051,
        "std": 0.0,
        "rates": [
          10.07591442374051
        ]
      },
      "task_rates": {
        "mean": 19.81132075471698,
        "std": 0.0,
        "rates": [
          19.81132075471698
        ]
      },
      "llm_cfg": {
        "model": "grok-3-mini-beta",
        "company": "XAI",
        "input_cost": 0.3,
        "output_cost": 0.5,
        "knowledge_cutoff_date": "2024-11",
        "client_kwargs": {
          "reasoning_effort": "high"
        },
        "pretty_name": "Grok-3-Mini-Beta (High)",
        "developer": "xAI",
        "is_open": false
      }
    },
    "GROK_2_1212": {
      "line_rates": {
        "mean": 11.939268461007591,
        "std": 0.0,
        "rates": [
          11.939268461007591
        ]
      },
      "task_rates": {
        "mean": 22.169811320754718,
        "std": 0.0,
        "rates": [
          22.169811320754718
        ]
      },
      "llm_cfg": {
        "model": "grok-2-1212",
        "company": "XAI",
        "input_cost": 2.0,
        "output_cost": 10.0,
        "knowledge_cutoff_date": "2024-07-17",
        "client_kwargs": {},
        "pretty_name": "Grok-2-1212",
        "developer": "xAI",
        "is_open": false
      }
    },
    "OPENROUTER_CLAUDE_3_5_HAIKU": {
      "line_rates": {
        "mean": 16.149068322981368,
        "std": 0.0,
        "rates": [
          16.149068322981368
        ]
      },
      "task_rates": {
        "mean": 37.735849056603776,
        "std": 0.0,
        "rates": [
          37.735849056603776
        ]
      },
      "llm_cfg": {
        "model": "anthropic/claude-3.5-haiku",
        "company": "OPENROUTER",
        "input_cost": 0.8,
        "output_cost": 4.0,
        "knowledge_cutoff_date": "2024-7",
        "client_kwargs": {},
        "pretty_name": "Claude-3.5-Haiku",
        "developer": "Anthropic",
        "is_open": false
      }
    },
    "OPENROUTER_LLAMA_4_MAVERICK": {
      "line_rates": {
        "mean": 11.939268461007591,
        "std": 0.0,
        "rates": [
          11.939268461007591
        ]
      },
      "task_rates": {
        "mean": 27.358490566037734,
        "std": 0.0,
        "rates": [
          27.358490566037734
        ]
      },
      "llm_cfg": {
        "model": "meta-llama/llama-4-maverick",
        "company": "OPENROUTER",
        "input_cost": 0.17,
        "output_cost": 0.6,
        "knowledge_cutoff_date": "2024-8",
        "client_kwargs": {},
        "pretty_name": "Llama-4-Maverick",
        "developer": "Meta",
        "is_open": true
      }
    },
    "OPENROUTER_LLAMA_4_SCOUT": {
      "line_rates": {
        "mean": 7.6604554865424435,
        "std": 0.0,
        "rates": [
          7.6604554865424435
        ]
      },
      "task_rates": {
        "mean": 18.39622641509434,
        "std": 0.0,
        "rates": [
          18.39622641509434
        ]
      },
      "llm_cfg": {
        "model": "meta-llama/llama-4-scout",
        "company": "OPENROUTER",
        "input_cost": 0.08,
        "output_cost": 0.3,
        "knowledge_cutoff_date": "2024-8",
        "client_kwargs": {},
        "pretty_name": "Llama-4-Scout",
        "developer": "Meta",
        "is_open": true
      }
    },
    "MISTRAL_CODESTRAL_2501": {
      "line_rates": {
        "mean": 14.078674948240167,
        "std": 0.0,
        "rates": [
          14.078674948240167
        ]
      },
      "task_rates": {
        "mean": 33.490566037735846,
        "std": 0.0,
        "rates": [
          33.490566037735846
        ]
      },
      "llm_cfg": {
        "model": "mistralai/codestral-2501",
        "company": "OPENROUTER",
        "input_cost": 0.3,
        "output_cost": 0.9,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "Mistral-Codestral-2501",
        "developer": "Mistral AI",
        "is_open": false
      }
    },
    "GEMINI_2_5_PRO_PREVIEW_05_06": {
      "line_rates": {
        "mean": 37.336093857832985,
        "std": 0.0,
        "rates": [
          37.336093857832985
        ]
      },
      "task_rates": {
        "mean": 64.15094339622641,
        "std": 0.0,
        "rates": [
          64.15094339622641
        ]
      },
      "llm_cfg": {
        "model": "gemini-2.5-pro-preview-05-06",
        "company": "GOOGLE",
        "input_cost": 1.25,
        "output_cost": 10.0,
        "knowledge_cutoff_date": "2025-01",
        "client_kwargs": {},
        "pretty_name": "Gemini-2.5-Pro-Preview-05-06",
        "developer": "Google",
        "is_open": false
      }
    },
    "OPENROUTER_QWEN_TURBO": {
      "line_rates": {
        "mean": 3.3126293995859215,
        "std": 0.0,
        "rates": [
          3.3126293995859215
        ]
      },
      "task_rates": {
        "mean": 8.018867924528301,
        "std": 0.0,
        "rates": [
          8.018867924528301
        ]
      },
      "llm_cfg": {
        "model": "qwen/qwen-turbo",
        "company": "OPENROUTER",
        "input_cost": 0.05,
        "output_cost": 0.2,
        "knowledge_cutoff_date": "2023-9",
        "client_kwargs": {},
        "pretty_name": "Qwen-2.5-Turbo",
        "developer": "Qwen",
        "is_open": false
      }
    },
    "OPENROUTER_MISTRAL_CODESTRAL_MAMBA": {
      "line_rates": {
        "mean": 0.759144237405107,
        "std": 0.0,
        "rates": [
          0.759144237405107
        ]
      },
      "task_rates": {
        "mean": 1.4150943396226416,
        "std": 0.0,
        "rates": [
          1.4150943396226416
        ]
      },
      "llm_cfg": {
        "model": "mistralai/codestral-mamba",
        "company": "OPENROUTER",
        "input_cost": 0.25,
        "output_cost": 0.25,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "Mistral-Codestral-Mamba",
        "developer": "Mistral AI",
        "is_open": true
      }
    },
    "OPENROUTER_AMAZON_NOVA_PRO_1_0": {
      "line_rates": {
        "mean": 9.454796411318151,
        "std": 0.0,
        "rates": [
          9.454796411318151
        ]
      },
      "task_rates": {
        "mean": 25.0,
        "std": 0.0,
        "rates": [
          25.0
        ]
      },
      "llm_cfg": {
        "model": "amazon/nova-pro-v1",
        "company": "OPENROUTER",
        "input_cost": 0.8,
        "output_cost": 3.2,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "Nova-Pro-V1",
        "developer": "Amazon",
        "is_open": false
      }
    },
    "OPENROUTER_COHERE_COMMAND_A": {
      "line_rates": {
        "mean": 14.699792960662524,
        "std": 0.0,
        "rates": [
          14.699792960662524
        ]
      },
      "task_rates": {
        "mean": 31.132075471698112,
        "std": 0.0,
        "rates": [
          31.132075471698112
        ]
      },
      "llm_cfg": {
        "model": "cohere/command-a",
        "company": "OPENROUTER",
        "input_cost": 2.5,
        "output_cost": 10.0,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "Command-A",
        "developer": "Cohere",
        "is_open": true
      }
    },
    "GEMINI_2_5_FLASH_PREVIEW_04_17": {
      "line_rates": {
        "mean": 19.530710835058663,
        "std": 0.0,
        "rates": [
          19.530710835058663
        ]
      },
      "task_rates": {
        "mean": 45.28301886792453,
        "std": 0.0,
        "rates": [
          45.28301886792453
        ]
      },
      "llm_cfg": {
        "model": "gemini-2.5-flash-preview-04-17",
        "company": "GOOGLE",
        "input_cost": 0.15,
        "output_cost": 0.6,
        "knowledge_cutoff_date": "2025-01",
        "client_kwargs": {
          "reasoning_effort": "high"
        },
        "pretty_name": "Gemini-2.5-Flash-Preview-04-17",
        "developer": "Google",
        "is_open": false
      }
    },
    "GEMINI_2_0_FLASH_LITE": {
      "line_rates": {
        "mean": 12.560386473429952,
        "std": 0.0,
        "rates": [
          12.560386473429952
        ]
      },
      "task_rates": {
        "mean": 30.660377358490564,
        "std": 0.0,
        "rates": [
          30.660377358490564
        ]
      },
      "llm_cfg": {
        "model": "gemini-2.0-flash-lite",
        "company": "GOOGLE",
        "input_cost": 0.075,
        "output_cost": 0.3,
        "knowledge_cutoff_date": "2024-08",
        "client_kwargs": {},
        "pretty_name": "Gemini-2.0-Flash-Lite",
        "developer": "Google",
        "is_open": false
      }
    },
    "OPENROUTER_MISTRAL_MEDIUM_3": {
      "line_rates": {
        "mean": 14.14768806073154,
        "std": 0.0,
        "rates": [
          14.14768806073154
        ]
      },
      "task_rates": {
        "mean": 35.37735849056604,
        "std": 0.0,
        "rates": [
          35.37735849056604
        ]
      },
      "llm_cfg": {
        "model": "mistralai/mistral-medium-3",
        "company": "OPENROUTER",
        "input_cost": 0.4,
        "output_cost": 2.0,
        "knowledge_cutoff_date": "2023-10",
        "client_kwargs": {},
        "pretty_name": "Medium-3",
        "developer": "Mistral AI",
        "is_open": false
      }
    }
  }
}